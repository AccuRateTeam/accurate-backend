generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model event {
  event_id         String    @id @db.VarChar(45) @default(cuid())
  event_name       String?   @db.VarChar(45)
  event_createtime DateTime? @default(now()) @db.DateTime(0)
  event_updatetime DateTime? @db.DateTime(0) @updatedAt
  result           result[]
}

model parcour {
  parcour_id         String           @id @db.VarChar(45) @default(cuid())
  parcour_name       String?          @db.VarChar(45)
  parcour_createtime DateTime?        @default(now()) @db.DateTime(0)
  parcour_updatetime DateTime?        @db.DateTime(0) @updatedAt
  parcour_target     parcour_target[]
}

model parcour_target {
  parcour_id String  @db.VarChar(45)
  target_id  String  @db.VarChar(45)
  parcour    parcour @relation(fields: [parcour_id], references: [parcour_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_parcour_has_target_parcour1")
  target     target  @relation(fields: [target_id], references: [target_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_parcour_has_target_target1")

  @@id([parcour_id, target_id])
  @@index([parcour_id], map: "fk_parcour_has_target_parcour1_idx")
  @@index([target_id], map: "fk_parcour_has_target_target1_idx")
}

model result {
  result_id         String    @id @db.VarChar(45) @default(cuid())
  result_points     String    @db.VarChar(45)
  event_id          String    @db.VarChar(45)
  target_id         String    @db.VarChar(45)
  user_id           String    @db.VarChar(45)
  result_createtime DateTime? @default(now()) @db.DateTime(0)
  result_updatetime DateTime? @db.DateTime(0) @updatedAt
  event             event     @relation(fields: [event_id], references: [event_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_result_event")
  target            target    @relation(fields: [target_id], references: [target_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_result_target1")
  user              user      @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_result_user1")

  @@index([event_id], map: "fk_result_event_idx")
  @@index([target_id], map: "fk_result_target1_idx")
  @@index([user_id], map: "fk_result_user1_idx")
}

model target {
  target_id         String           @id @db.VarChar(45) @default(cuid())
  target_name       String?          @db.VarChar(45)
  target_distance1  Int?
  target_distance2  Int?
  target_distance3  Int?
  target_createtime DateTime?        @default(now()) @db.DateTime(0)
  target_updatetime DateTime?        @db.DateTime(0) @updatedAt
  parcour_target    parcour_target[]
  result            result[]
}

model user {
  user_id         String    @id @db.VarChar(45) @default(cuid())
  user_auth_id    String    @db.VarChar(45) @unique
  user_name       String    @db.VarChar(16)
  user_email      String?   @db.VarChar(255)
  user_createtime DateTime? @default(now()) @db.DateTime(0)
  user_updatetime DateTime? @db.DateTime(0) @updatedAt
  result          result[]
}
